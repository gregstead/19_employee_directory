{"version":3,"sources":["utils/api.js","components/Table/index.jsx","components/Container/index.jsx","components/Col/index.jsx","components/Row/index.jsx","components/Search/index.jsx","pages/index.jsx","components/Header/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Table","props","employees","React","useState","sortField","setSortField","sortedEmployees","sort","a","b","name","className","scope","onClick","map","employee","_idx","src","picture","medium","alt","first","last","email","Container","style","children","Col","Row","Search","type","value","search","onChange","handleInputChange","e","handleFormSubmit","Page","state","filteredCache","results","event","setState","target","preventDefault","filteredEmployees","filter","firstName","toLowerCase","lastName","includes","getEmployees","API","then","res","data","catch","err","console","log","render","length","this","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b99b05e.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Export and object containing API methods\nexport default {\n  getRandomEmployees: function () {\n    return axios.get(\"https://randomuser.me/api/?results=20\");\n  },\n};\n","import React from \"react\";\n\nfunction Table(props) {\n  const { employees } = props;\n  const [sortField, setSortField] = React.useState(null);\n\n  let sortedEmployees = [...employees];\n  // Sort employees\n\n  if (sortField !== null) {\n    sortedEmployees.sort((a, b) => {\n      switch (sortField) {\n        case \"email\":\n          if (a[sortField] < b[sortField]) {\n            return -1;\n          }\n          if (a[sortField] > b[sortField]) {\n            return 1;\n          }\n          return 0;\n        case \"first\":\n        case \"last\":\n          if (a.name[sortField] < b.name[sortField]) {\n            return -1;\n          }\n          if (a.name[sortField] > b.name[sortField]) {\n            return 1;\n          }\n          return 0;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\"></th>\n          {/* Make table headings clickable and set sorter field */}\n          <th scope=\"col\" onClick={() => setSortField(\"first\")}>\n            First\n          </th>\n          <th scope=\"col\" onClick={() => setSortField(\"last\")}>\n            Last\n          </th>\n          <th scope=\"col\" onClick={() => setSortField(\"email\")}>\n            Email\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        {/* Dynamically generate table rows */}\n        {sortedEmployees.map((employee, _idx) => (\n          <tr key={employee.email}>\n            <th scope=\"row\">\n              <img\n                src={employee.picture.medium}\n                alt={`${employee.name.first} ${employee.name.last}`}\n              />\n            </th>\n            <td>{employee.name.first}</td>\n            <td>{employee.name.last}</td>\n            <td>{employee.email}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\nexport default Table;\n","import React from \"react\"\n\nfunction Container(props) {\n  return (\n    <div className=\"container\" style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from \"react\"\n\nfunction Col(props) {\n  return (\n    <div className=\"col\" style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Col;","import React from \"react\"\n\nfunction Row(props) {\n  return (\n    <div className=\"row\" style={props.style}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Row;","import React from \"react\";\n\nfunction Search(props) {\n  return (\n    <div>\n      <form className=\"text-center p-3\">\n        <input\n          type=\"text\"\n          value={props.search}\n          onChange={props.handleInputChange}\n        />\n        <button\n          onClick={(e) => {\n            props.handleFormSubmit(e);\n          }}\n          className=\"btn\"\n        >\n          Search\n        </button>\n      </form>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Search;\n","import { Component } from \"react\";\nimport API from \"../utils/api\";\nimport Table from \"../components/Table\";\nimport Container from \"../components/Container\";\nimport Col from \"../components/Col\";\nimport Row from \"../components/Row\";\nimport Search from \"../components/Search\";\n\nclass Page extends Component {\n  state = {\n    search: \"\",\n    filteredCache: [],\n    results: [],\n  };\n\n  // API call for employee generator\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  handleInputChange = (event) => {\n    this.setState({\n      ...this.state,\n      search: event.target.value,\n    });\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const filteredEmployees = this.state.results.filter((employee) => {\n      const firstName = employee.name.first.toLowerCase();\n      const lastName = employee.name.first.toLowerCase();\n      return (\n        firstName.includes(this.state.search.toLowerCase()) ||\n        lastName.includes(this.state.search.toLowerCase())\n      );\n    });\n    this.setState({\n      ...this.state,\n      filteredCache: filteredEmployees,\n    });\n  };\n\n  getEmployees = () => {\n    API.getRandomEmployees()\n      .then((res) => {\n        this.setState({\n          results: res.data.results,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render = () => {\n    return (\n      <div>\n        {/* Title */}\n        <Search\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        >\n          <Container>\n            <Row>\n              <Col>\n                <Table\n                  employees={\n                    this.state.filteredCache.length > 0\n                      ? this.state.filteredCache\n                      : this.state.results\n                  }\n                />\n              </Col>\n            </Row>\n          </Container>\n        </Search>\n      </div>\n    );\n  };\n}\n\nexport default Page;\n","import React from \"react\";\n\nfunction Header(props) {\n  return <h1 className=\"text-center\">Employee Directory</h1>;\n}\n\nexport default Header;\n","import \"./App.css\";\nimport Page from \"./pages\";\nimport Header from \"./components/Header\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Page />;\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}